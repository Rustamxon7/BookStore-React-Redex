{"version":3,"sources":["redux/books/books.js","redux/configureStore.js","components/pages/CategoriesPage.js","components/bookstore/Input.js","components/bookstore/Book.js","components/bookstore/List.js","components/Navbar.js","components/Container.js","App.js","index.js"],"names":["ADD_BOOK","REMOVE_BOOK","GET_BOOKS","initialState","reducer","state","action","id","type","payload","filter","book","combineReducers","books","store","createStore","applyMiddleware","logger","thunk","CategoriesPage","Input","dispatch","useDispatch","useState","enteredTitle","setEnteredTitle","enteredAuthor","setEnteredAuthor","enteredCategory","setEnteredCategory","name","value","placeholder","onChange","event","target","onClick","preventDefault","newBook","uuidv4","title","category","a","fetch","method","headers","body","JSON","stringify","item_id","Book","props","split","bookTitle","author","style","color","removeBook","List","useEffect","then","response","json","getFetch","getFetchId","Object","keys","formated","map","key","push","useSelector","Navbar","path","text","page","to","activeClassName","exact","Container","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ce6efff.chunk.js","sourcesContent":["const ADD_BOOK = 'bookStore/books/ADD-BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE-BOOK';\nconst GET_BOOKS = 'bookStore/books/GET-BOOK';\n\nconst initialState = [];\n\nexport const getBooks = (payload) => ({\n  type: GET_BOOKS,\n  payload,\n});\n\nexport const loaded = () => async (dispatch) => {\n  const getFetch = await fetch('https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/cJlBscH8aPE5lvm6WwKw/books').then((response) => response.json());\n  const getFetchId = Object.keys(getFetch);\n  const formated = [];\n  getFetchId.map((key) => formated.push({\n    id: key,\n    title: getFetch[key][0].title,\n    category: getFetch[key][0].category,\n  }));\n  dispatch(getBooks(formated));\n};\n\nexport const addBook = (payload) => async (dispatch) => {\n  const adding = await fetch('https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/cJlBscH8aPE5lvm6WwKw/books', {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      item_id: payload.id,\n      title: payload.title,\n      category: payload.category,\n    }),\n  });\n  if (adding) {\n    dispatch({\n      type: ADD_BOOK,\n      payload,\n    });\n  }\n};\n\nexport const removeBook = (id) => async (dispatch) => {\n  const removing = await fetch(`https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/cJlBscH8aPE5lvm6WwKw/books/${id}`, {\n    method: 'Delete',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      item_id: id,\n    }),\n  });\n  if (removing) {\n    dispatch({\n      type: REMOVE_BOOK,\n      id,\n    });\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  const { id, type, payload } = action;\n  switch (type) {\n    case ADD_BOOK:\n      return [...state, payload];\n    case REMOVE_BOOK:\n      return state.filter((book) => book.id !== id);\n    case GET_BOOKS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport books from './books/books';\n\nconst reducer = combineReducers({\n  books,\n});\n\nconst store = createStore(reducer, applyMiddleware(logger, thunk));\n\nexport default store;\n","import React from 'react';\n\nconst CategoriesPage = () => <div>Under construction</div>;\n\nexport default CategoriesPage;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addBook } from '../../redux/books/books';\n\nfunction Input() {\n  const dispatch = useDispatch();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAuthor, setEnteredAuthor] = useState('');\n  const [enteredCategory, setEnteredCategory] = useState('');\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const authorChangeHandler = (event) => {\n    setEnteredAuthor(event.target.value);\n  };\n\n  const categoryChangeHandler = (event) => {\n    setEnteredCategory(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const newBook = {\n      id: uuidv4(),\n      title: `${enteredTitle} - ${enteredAuthor}`,\n      category: enteredCategory,\n    };\n\n    dispatch(addBook(newBook));\n    setEnteredTitle('');\n    setEnteredAuthor('');\n    setEnteredCategory('');\n  };\n\n  return (\n    <div>\n      <h2>ADD NEW BOOK</h2>\n      <form>\n        <input name=\"title\" value={enteredTitle} type=\"text\" placeholder=\"Book title\" onChange={titleChangeHandler} />\n        <input name=\"title\" value={enteredAuthor} type=\"text\" placeholder=\"Author\" onChange={authorChangeHandler} />\n        <select name=\"category\" value={enteredCategory} id=\"categories\" onChange={categoryChangeHandler}>\n          <option value=\"Romance\">Romance</option>\n          <option value=\"Mystery\">Mystery</option>\n          <option value=\"Fantasy and science fiction\">Fantasy and science fiction</option>\n          <option value=\"Thrillers and horror\">Thrillers and horror</option>\n        </select>\n        <button type=\"button\" onClick={submitHandler}>\n          ADD BOOK\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeBook } from '../../redux/books/books';\n\nconst Book = (props) => {\n  const { book } = props;\n  const { title, category, id } = book;\n  const [bookTitle, author] = title.split('-');\n\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <li>\n        {bookTitle}\n        <br />\n        <p style={{ color: 'blue' }}>{author}</p>\n        <br />\n        {category}\n        <button type=\"button\" onClick={() => dispatch(removeBook(id))}>\n          Delete\n        </button>\n      </li>\n    </div>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Book;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Book from './Book';\nimport { loaded } from '../../redux/books/books';\n\nfunction List() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loaded());\n  }, []);\n\n  const books = useSelector((state) => state.books);\n  return (\n    <ul>\n      {books.map((book) => (\n        <Book key={book.id} book={book} />\n      ))}\n    </ul>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  const pages = [\n    {\n      id: 1,\n      path: '/BookStore-React-Redex/',\n      text: 'BOOKS',\n    },\n    {\n      id: 2,\n      path: '/BookStore-React-Redex/categories',\n      text: 'CATEGORIES',\n    },\n  ];\n\n  return (\n    <div>\n      <ul>\n        <h1>BookStore CMD</h1>\n        {pages.map((page) => (\n          <li key={page.id}>\n            <NavLink to={page.path} activeClassName=\"active-link\" exact>\n              {page.text}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CategoriesPage from './pages/CategoriesPage';\nimport Input from './bookstore/Input';\nimport List from './bookstore/List';\nimport Navbar from './Navbar';\n\nconst Container = () => (\n  <div>\n    <Navbar />\n    <Switch>\n      <Route exact path=\"/BookStore-React-Redex/\">\n        <div className=\"container\">\n          <List />\n          <Input />\n        </div>\n      </Route>\n\n      <Route path=\"/BookStore-React-Redex/categories\">\n        <CategoriesPage />\n      </Route>\n    </Switch>\n  </div>\n);\n\nexport default Container;\n","import './App.css';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\nimport Container from './components/Container';\n\nconst App = () => (\n  <div>\n    <Provider store={store}>\n      <Container />\n    </Provider>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}